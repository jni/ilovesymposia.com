<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>I Love Symposia! (Posts about conference)</title><link>https://ilovesymposia.com/</link><description></description><atom:link href="https://ilovesymposia.com/categories/conference.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:jni.soma@fastmail.com"&gt;Juan Nunez-Iglesias&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License BY"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Tue, 28 May 2019 10:34:04 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Summer school announcement: 2nd Advanced Scientific Programming in Python (ASPP) Asia Pacific!</title><link>https://ilovesymposia.com/2018/08/30/summer-school-announcement-2nd-advanced-scientific-programming-in-python-aspp-asia-pacific/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The Advanced Scientific Programming in Python (ASPP) summer school has had &lt;a href="https://scipy-school.org/archives"&gt;10 successful iterations&lt;/a&gt; in Europe and &lt;a href="https://python.g-node.org/aspp-asia-pacific-2018/"&gt;one iteration here in Melbourne&lt;/a&gt; earlier this year. Another European iteration is starting next week in Camerino, Italy.&lt;/p&gt;
&lt;p&gt;Now, thanks to the generous sponsorship of &lt;a href="https://www.csiro.au"&gt;CSIRO&lt;/a&gt;, and the efforts of &lt;a href="http://biology.anu.edu.au/people/benjamin-schwessinger"&gt;Benjamin Schwessinger&lt;/a&gt; and &lt;a href="https://twitter.com/DataNerdery"&gt;Genevieve Buckley&lt;/a&gt;, two alumni from the Melbourne school, and &lt;a href="https://people.csiro.au/M/K/Kerensa-Mcelroy"&gt;Kerensa McElroy&lt;/a&gt;, Agriculture Data School Coordinator at CSIRO, the Asia Pacific fork of ASPP gets its second iteration in &lt;strong&gt;Canberra&lt;/strong&gt;, &lt;strong&gt;Jan 20-27, 2019&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;Key details&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The workshop runs &lt;strong&gt;January 20-27, 2019&lt;/strong&gt; at the &lt;strong&gt;Australian National University&lt;/strong&gt; in Canberra, Australia.&lt;/li&gt;
&lt;li&gt;topics include git, contributing to open source software with github, testing, debugging, profiling, advanced NumPy, Cython, and data visualisation.&lt;/li&gt;
&lt;li&gt;hands-on learning using pair programming&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;free to attend&lt;/strong&gt; (but students are responsible for travel, accommodation, and meals)&lt;/li&gt;
&lt;li&gt;30 student places, to be selected competitively&lt;/li&gt;
&lt;li&gt;application deadline is &lt;strong&gt;Oct 7, 2018&lt;/strong&gt;, 23:59 &lt;a href="https://www.timeanddate.com/time/zones/aoe"&gt;Anywhere On Earth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;website: https://scipy-school.org&lt;/li&gt;
&lt;li&gt;FAQ: https://scipy-school.org/faq&lt;/li&gt;
&lt;li&gt;apply: https://scipy-school.org/applications&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- TEASER_END --&gt;

&lt;h3&gt;Background&lt;/h3&gt;

&lt;p&gt;Three years ago, I had the privilege of teaching the 2015 ASPP school in Munich. It turned out to be a fantastic teaching experience (I have taught in 2 more since), and more importantly, it was a fantastic experience for the students. Students are selected for the school to fit a certain profile, neither too novice nor too advanced. As such, participants selected for the school are almost guaranteed to learn a great deal.&lt;/p&gt;
&lt;p&gt;Indeed, almost every iteration of the school has been co-organised by former students. Sure enough, with the help of two students from the Melbourne instance, we will be able to have a new iteration in Canberra this January.&lt;/p&gt;
&lt;h3&gt;Course description&lt;/h3&gt;

&lt;p&gt;Scientists spend increasingly more time writing, maintaining, and debugging software. While techniques for doing this efficiently have evolved, only few scientists have been trained to use them. As a result, instead of doing their research, they spend far too much time writing deficient code and reinventing the wheel. In this course we will present a selection of advanced programming techniques and best practices that are standard in industry, but especially tailored to the needs of a programming scientist. Lectures are devised to be interactive and to give the students enough time to acquire direct hands-on experience with the materials. Students will work in pairs throughout the school and will team up to practice the newly learned skills in a real programming project — an entertaining computer game.&lt;/p&gt;
&lt;p&gt;We use the Python programming language for the entire course. Python works as a simple programming language for beginners, but more importantly, it also works great in scientific simulations and data analysis. We show how clean language design, ease of extensibility, and the great wealth of open source libraries for scientific computing and data visualization are driving Python to becoming a standard tool for scientists.&lt;/p&gt;
&lt;h3&gt;Who is eligible?&lt;/h3&gt;

&lt;p&gt;This school is targeted at Master/PhD students, postdocs, and academic staff and technicians from all areas of science. Competence in Python or in another language such as Java, C/C++, MATLAB, or Mathematica is absolutely required. Basic knowledge of Python and of a version control system such as git, subversion, mercurial, or bazaar is assumed. Participants without any prior experience with Python and/or git should work through the proposed introductory material before the course.&lt;/p&gt;
&lt;p&gt;We have strived to get a pool of students that is international and gender-balanced, and have succeeded, with gender parity in the last five schools.&lt;/p&gt;
&lt;h3&gt;More questions&lt;/h3&gt;

&lt;p&gt;If you have any questions, contact &lt;a href="mailto:info@scipy-school.org"&gt;info@scipy-school.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please circulate this announcement widely! And follow &lt;a href="https://twitter.com/scipyschool"&gt;@scipyschool&lt;/a&gt; for further developments.&lt;/p&gt;
&lt;p&gt;Juan.&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>open-source</category><category>Planet SciPy</category><category>programming</category><category>Python</category><category>science</category><guid>https://ilovesymposia.com/2018/08/30/summer-school-announcement-2nd-advanced-scientific-programming-in-python-aspp-asia-pacific/</guid><pubDate>Thu, 30 Aug 2018 04:48:05 GMT</pubDate></item><item><title>1st ASPP Asia Pacific evaluation survey</title><link>https://ilovesymposia.com/2018/04/09/1st-aspp-asia-pacific-evaluation-survey/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;In January of 2018, we had the first &lt;a href="http://python.g-node.org"&gt;ASPP summer school&lt;/a&gt; outside of Europe. (This was a parallel workshop to the European one, which will be held in Italy in September 2018.) In general, it was a great success, with some caveats that we will elaborate on below.&lt;/p&gt;
&lt;p&gt;First we want to note that this school was a bit different than the European ones, in that we only had attendees from Australian institutions, where the European school has broad international representation, including some from out of Europe. This was in some ways inevitable, as it is more expensive to travel to Australia from almost anywhere than to travel within Europe. On the other hand, we advertised relatively late, and we were unable to secure travel grants during the advertising period, so there is hope that a future edition would be able to attract a more international crowd from the Asia Pacific region.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;Given all this, there was a question as to whether we would be able to capture the atmosphere of the school, which normally sees the students living together and socialising for basically the whole week. In this case, most students just went home after classes were finished. But although some of that atmosphere was missing, by the end of the week we did manage to get some close links between all the students and the faculty. The evaluations below show that most of the value of the school was preserved.&lt;/p&gt;
&lt;p&gt;We note that 100% of the respondents (29/30 of the students) would recommend the course to their peers. So, although some lectures were better received than others, and although the programming project was not universally loved, we managed to provide value for everyone. All of this is in line with the evaluations at previous schools (available at https://python.g-node.org/wiki/archives.html).&lt;/p&gt;
&lt;p&gt;The project, which consists of programming a videogame bot, is controversial every year, but, consistently, more people like it than don't, and people get to practice git, pair programming, and programming as a team, which is the single most difficult skill to practice when programming for science. Indeed when we walk around during the project programming sessions, we see people extremely engaged in what they are coding. It's difficult to imagine a scientific problem engaging such diverse people as the school's attendees (which come from very disparate scientific fields).&lt;/p&gt;
&lt;p&gt;Of all the feedback, two particular statements, we hope from people in the same project group, broke our hearts. We decided not to include them in this report, because they might be easy to de-anonymise by group members, but they boil down to the following: a group member, by being combative and rude to others in their team, and deciding to essentially complete the project by themselves, ruined the programming project for all of their team members, with some even feeling that they were not good enough to contribute. This is tragic, because we want everyone in the school to feel &lt;em&gt;empowered&lt;/em&gt; to do anything at all in Python.&lt;/p&gt;
&lt;p&gt;Absolutely every student has something to offer in this project. Here, as in life, teams are comprised of members of varying skills. But we know from our selection that everyone has the skills to contribute (and this is confirmed by the fact that most attendees, for most lectures, felt that the difficulty level was "just right"). So if a student felt inadequate, it can only be because of the toxic team member.&lt;/p&gt;
&lt;p&gt;Ned Batchelder recently wrote an excellent &lt;a href="https://nedbatchelder.com/blog/201711/toxic_experts.html"&gt;blog post&lt;/a&gt; about what he calls "Toxic experts" and what Tiziano Zito calls, somewhat more bluntly, "Arrogant assholes". (In discussions about this post, Tiziano and others noted that one does not have to be an expert to be toxic, or arrogant, or an asshole. No matter: the points below apply equally to anyone meeting any of the above characteristics &lt;em&gt;regardless&lt;/em&gt; of expertise.)&lt;/p&gt;
&lt;p&gt;The feedback we received should serve as a warning to selection committees and hiring managers everywhere about how damaging it is to allow such a person into your ranks. Due to the anonymous nature of the survey, we can't tell whether there was one or two toxic experts in our midst, but if it's one, they soured the school for five other people. If it's two, then that's ten people, a third of the school, that might have had a terrible experience. The problem with toxic experts is that they can so quickly cause damage to so many others. Thus, even if they are a mythical "10x engineer", &lt;strong&gt;they are not worth it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Literally nothing that the above-described team member could have done, coding-wise, could make up for the damage they caused. Despite their strong opinions, they missed the entire point of the programming project, which is not to win a medal, but to &lt;em&gt;learn about working in a team.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We try to avoid toxic experts in our selection process for the school, but they slip through every so often. In response to this feedback, we will aim to be even more vigilant in our selection, and also make the aims of the project &lt;em&gt;as a learning exercise&lt;/em&gt; more explicit during its introduction. We will also make sure to be more aware of group interactions during the actual school; we apologise to the students involved that we did not catch this behaviour this time. We are truly sorry.&lt;/p&gt;
&lt;p&gt;If you are in the position of being an expert during a school or workshop, don't go it alone. That is a waste of your time, because you can do a programming project on your own whenever you damn well please. Slow down, and think instead about practicing your teaching and mentoring skills. They are also important in life, and, in many contexts, they are your responsibility.&lt;/p&gt;
&lt;p&gt;You can access the full survey results &lt;a href="https://python.g-node.org/wiki/_media/evaluation_survey_2018_melbourne.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;-- Juan, and the Organisers.&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>programming</category><category>Python</category><category>science</category><guid>https://ilovesymposia.com/2018/04/09/1st-aspp-asia-pacific-evaluation-survey/</guid><pubDate>Mon, 09 Apr 2018 03:29:53 GMT</pubDate></item><item><title>Summer School Announcement: ASPP Asia-Pacific 2018</title><link>https://ilovesymposia.com/2017/10/05/summer-school-announcement-aspp-asia-pacific-2018/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The Advanced Scientific Programming in Python (ASPP) summer school has had 10 extremely successful iterations in Europe. (You can find past materials, schedules, and student evaluations at &lt;a href="https://python.g-node.org/archives"&gt;https://python.g-node.org/archives&lt;/a&gt;.) Now, thanks to the &lt;a href="https://incf.org"&gt;INCF&lt;/a&gt;, we will be holding its first iteration in Australia, to cater to the Asia Pacific region. (Note: the original ASPP will still take place in Europe next Northern summer; this is a fork of that school.)&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;Key details&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The workshop runs &lt;strong&gt;January 14-21&lt;/strong&gt; at the &lt;strong&gt;Melbourne Brain Centre&lt;/strong&gt;, University of Melbourne, Australia&lt;/li&gt;
&lt;li&gt;topics include: git, contributing to open source software with github, testing, debugging, profiling, advanced NumPy, Cython, data visualisation.&lt;/li&gt;
&lt;li&gt;hands-on learning using pair programming&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;free to attend&lt;/strong&gt; (but students are responsible for travel, accommodation, and meals)&lt;/li&gt;
&lt;li&gt;30 student places, to be selected competitively&lt;/li&gt;
&lt;li&gt;application deadline is &lt;strong&gt;Oct 31, 2017&lt;/strong&gt;, 23:59 UTC.&lt;/li&gt;
&lt;li&gt;website: https://melbournebioinformatics.org.au/aspp-asia-pacific&lt;/li&gt;
&lt;li&gt;apply: https://melbournebioinformatics.org.au/aspp-asia-pacific/applications (make sure you read the FAQ on that page)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- TEASER_END --&gt;

&lt;h3&gt;Background&lt;/h3&gt;

&lt;p&gt;Two-and-a-bit years ago, Tiziano Zito asked me if I could join the faculty at the 2015 ASPP school in Munich (then in its 8th iteration). It turned out to be a fantastic teaching experience, and, more importantly, it was a fantastic experience for the students. Students selected for the school fit a certain profile, neither novice nor advanced. As such, you can be sure that if you participate in the school, you will learn a great deal. We teach tools that will immediately improve your scientific practice. I decided that I wanted to replicate the school in Australia. Now it is finally here!&lt;/p&gt;
&lt;h3&gt;Course outline&lt;/h3&gt;

&lt;p&gt;Scientists spend increasingly more time writing, maintaining, and debugging software. While techniques for doing this efficiently have evolved, only few scientists have been trained to use them. As a result, instead of doing their research, they spend far too much time writing deficient code and reinventing the wheel. In this course we will present a selection of advanced programming techniques and best practices that are standard in industry, but especially tailored to the needs of a programming scientist. Lectures are devised to be interactive and to give the students enough time to acquire direct hands-on experience with the materials. Students will work in pairs throughout the school and will team up to practice the newly learned skills in a real programming project — an entertaining computer game.&lt;/p&gt;
&lt;p&gt;We use the Python programming language for the entire course. Python works as a simple programming language for beginners, but more importantly, it also works great in scientific simulations and data analysis. We show how clean language design, ease of extensibility, and the great wealth of open source libraries for scientific computing and data visualization are driving Python to becoming a standard tool for scientists.&lt;/p&gt;
&lt;h3&gt;Who is eligible?&lt;/h3&gt;

&lt;p&gt;This school is targeted at Master/PhD students and postdocs from all areas of science. Competence in Python or in another language such as Java, C/C++, MATLAB, or Mathematica is absolutely required. Basic knowledge of Python and of a version control system such as git, subversion, mercurial, or bazaar is assumed. Participants without any prior experience with Python and/or git should work through the proposed introductory material &lt;strong&gt;before&lt;/strong&gt; the course.&lt;/p&gt;
&lt;p&gt;We have strived to get a pool of students that is international and gender-balanced, and have succeeded, with gender parity in the last four schools.&lt;/p&gt;
&lt;h3&gt;More questions&lt;/h3&gt;

&lt;p&gt;If you have any questions, contact &lt;a href="mailto:aspp@melbournebioinformatics.org.au"&gt;aspp@melbournebioinformatics.org.au&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please circulate this announcement widely!&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Juan.&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>Planet SciPy</category><category>programming</category><category>Python</category><category>Scientific Computing</category><category>Workshops</category><guid>https://ilovesymposia.com/2017/10/05/summer-school-announcement-aspp-asia-pacific-2018/</guid><pubDate>Thu, 05 Oct 2017 03:21:30 GMT</pubDate></item><item><title>EuroSciPy 2015 debrief</title><link>https://ilovesymposia.com/2015/10/09/euroscipy-2015-debrief/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The videos from EuroSciPy 2015 are &lt;a href="https://www.youtube.com/playlist?list=PLYx7XA2nY5GeQCCugyvtnHMVLdhYlrRxH"&gt;up&lt;/a&gt;! This marks a good time to write up my thoughts on the conference.
I’ve &lt;a href="http://ilovesymposia.com/2015/03/23/go-to-scipy-2015/"&gt;mentioned before&lt;/a&gt; that the yearly SciPy conference is stunningly useful. This year I couldn’t make it to Austin, but I did attend &lt;a href="https://www.euroscipy.org/2015/"&gt;EuroSciPy&lt;/a&gt;, the European version of the same conference, in Cambridge, UK. It was spectacular.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;&lt;/p&gt;&lt;h3&gt;Useful talks&lt;/h3&gt;
&lt;p&gt;The talk of the conference, for me, goes to &lt;a href="https://youtu.be/8tysix6Olgc"&gt;Robin Wilson for recipy&lt;/a&gt;, which one can describe as a logging utility, if one wishes to make it sound as uninspiring as possible. Recipy’s strength is in its mind-boggling simplicity. Here is the unabridged usage guide:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;recipy&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;With this single line, your script will now generate an entry in a database every time it is run. It logs the start and end time, the working directory, the script's git hash, any differences between the working copy and the last git commit (!), and the names of any input and output files. (File hashes are coming soon, &lt;a href="https://twitter.com/sciremotesense/status/646951148608425984"&gt;I’m assured&lt;/a&gt;).
I don’t know about you but I have definitely lost count of the times I’ve looked at a file and wondered what script I ran to get it, or the input data that went into it. This library solves that problem with absolutely minimal friction for the user.
I also enjoyed Nicolas Rougier’s &lt;a href="https://youtu.be/orLYVhSrOwk"&gt;talk&lt;/a&gt; on &lt;a href="https://rescience.github.io"&gt;ReScience&lt;/a&gt;, a new journal dedicated to replicated (and replicable) scientific analyses. It’s a venue to publish all those efforts to replicate a result you read in a paper. Given recent findings about how &lt;em&gt;poorly&lt;/em&gt; most papers replicate, I think this is a really important outlet.
The other remarkable thing about it is that all review is open and done in the spirit of open source, on GitHub. Submission is by &lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;pull request&lt;/a&gt;, of course. With just one paper out so far, it’s a bit early to tell whether it’ll take off, but I really hope it does. I’ll be looking for stuff of my own to publish there, for sure. (Oh and by the way, they are &lt;a href="http://rescience.github.io/faq/"&gt;looking for reviewers and editors!&lt;/a&gt;)
Another great &lt;a href="https://youtu.be/_vMq8Z82poA"&gt;talk&lt;/a&gt; was Philipp Rudiger on &lt;a href="http://holoviews.org"&gt;HoloViews&lt;/a&gt;, an object-oriented plotting framework. They define an arithmetic on figures: &lt;code&gt;A * B&lt;/code&gt; overlays figure B on A, while &lt;code&gt;B + C&lt;/code&gt; creates two subplots out of B and C (and automatically labels them). Their &lt;a href="http://holoviews.org/Examples/index.html"&gt;example notebooks&lt;/a&gt; rely a lot on IPython magic, which I’m not happy about and means I haven’t fully grokked the API, but it seems like a genuinely useful way to think about plotting.
A final highlight from the main session was &lt;a href="https://youtu.be/MeFsmFTU2JQ"&gt;Martin Weigert on Spimagine&lt;/a&gt;, his GPU-accelerated, 5D image analysis and visualisation framework. It was stupidly impressive. Although it’s a long-term project, I’m inclined to try to incorporate many of its components into &lt;a href="http://scikit-image.org"&gt;scikit-image&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Tutorials&lt;/h3&gt;

&lt;p&gt;The tutorials are a great asset of both EuroSciPy and SciPy. I learn something new every year. The highlight for me was the &lt;a href="https://youtu.be/GmxZfZjEjZo"&gt;Cython tutorial&lt;/a&gt;, in which Stefan Behnel demonstrated how easy it is to provide Python access to C++ code using Cython. (I have used Cython quite extensively, but only to speed up Python code, rather than wrap C or C++ code.)&lt;/p&gt;
&lt;h3&gt;Sprints&lt;/h3&gt;

&lt;p&gt;I was feeling a bit hypocritical for missing the sprints this year, since I had to run off before the Sunday. Emmanuelle Gouillart, another scikit-image core dev, suggested having a small, unofficial sprint on Friday evening. It grew and grew into a group of about 30 people (including about 10 new to sprinting) who all gathered at the Enthought Cambridge office to work on scikit-image or the &lt;a href="http://www.scipy-lectures.org"&gt;SciPy lecture notes&lt;/a&gt;. A brilliant experience.
&lt;img src="https://pbs.twimg.com/media/CNg3PuJWgAAj0Qq.jpg" alt="scikit-image sprint at Enthought"&gt;
(By the way, nothing creepy going on with that dude hunching over one of our sprinters — that's just husband-and-wife team Olivia and Robin Wilson! ;)&lt;/p&gt;
&lt;h3&gt;Final thoughts&lt;/h3&gt;

&lt;p&gt;As usual, I learned heaps and had a blast at this SciPy conference (my fourth). I hope it will remain a yearly ritual, and I hope someone reading this will give it a try next year!&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>Planet SciPy</category><category>programming</category><category>Python</category><category>SciPy</category><guid>https://ilovesymposia.com/2015/10/09/euroscipy-2015-debrief/</guid><pubDate>Thu, 08 Oct 2015 14:06:01 GMT</pubDate></item><item><title>The SciPy ecosystem belongs to everyone</title><link>https://ilovesymposia.com/2015/05/04/the-scipy-ecosystem-belongs-to-everyone/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;I use Twitter favourites almost exclusively to mark posts that I know will be &lt;em&gt;useful&lt;/em&gt; in some not-too-distant future; kind of like a Twitter Evernote. Recently I was looking through my list in search of &lt;a href="http://www.pydanny.com/building-conda-packages-for-multiple-operating-systems.html"&gt;this excellent blog post&lt;/a&gt; detailing how to build cross-platform binary distributions for &lt;a href="http://conda.pydata.org/docs/"&gt;conda&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I came across two other tweets from the EuroSciPy 2014 conference: &lt;a href="https://twitter.com/ianozsvald/status/505739079590608896"&gt;this one&lt;/a&gt; by Ian Ozsvald about his &lt;a href="https://github.com/ianozsvald/ipython_memory_usage"&gt;IPython memory usage&lt;/a&gt; profiler, right next to &lt;a href="https://twitter.com/AlexChabotL/status/505746290412888065"&gt;this one&lt;/a&gt; by Alexandre Chabot about Aaron O'Leary's &lt;a href="https://github.com/aaren/notedown"&gt;notedown&lt;/a&gt;. I'd forgotten that this was how I came across these two tools, but since then I have contributed code to both (&lt;a href="https://github.com/ianozsvald/ipython_memory_usage/pull/1"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/aaren/notedown/pull/15"&gt;2&lt;/a&gt;). I'd met Ian at EuroSciPy 2013, but I've never met Aaron, yet nevertheless there is my code in the latest version of his notedown library.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;How remarkable the open-source Python community has become. Talks from Python conferences are posted to YouTube, usually &lt;em&gt;as the conference is happening&lt;/em&gt;. (Add to that plenty of live tweeting.) Thus, even when I can't attend the conferences, I can keep up with the latest open source libraries, from the other side of the world. And then I can grab the source code on GitHub, fiddle with it to my heart's content, and &lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;submit a pull request&lt;/a&gt; to the author with my changes. After a short while, code that I wrote for my own utility is available for anyone else to use through PyPI or conda.&lt;/p&gt;
&lt;p&gt;My point is: join us! &lt;a href="http://www.astrobetter.com/blog/2014/03/10/the-whys-and-hows-of-licensing-scientific-code/"&gt;Make your code open source&lt;/a&gt;, and conversely, when you need some functionality, don't reinvent the wheel. See if there's a library that &lt;em&gt;almost&lt;/em&gt; meets your needs, and contribute!&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>GitHub</category><category>open-source</category><category>Planet SciPy</category><category>programming</category><category>Python</category><guid>https://ilovesymposia.com/2015/05/04/the-scipy-ecosystem-belongs-to-everyone/</guid><pubDate>Mon, 04 May 2015 10:38:56 GMT</pubDate></item><item><title>Calling out SciPy on diversity (even though it hurts)</title><link>https://ilovesymposia.com/2015/04/03/calling-out-scipy-on-diversity/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Over the past few weeks, I've been heavily &lt;a href="http://ilovesymposia.com/2015/03/23/go-to-scipy-2015/"&gt;promoting&lt;/a&gt; the &lt;a href="http://scipy2015.scipy.org/"&gt;SciPy conference&lt;/a&gt;, a meeting about scientific programming in Python. I've been telling everyone who would listen that they should submit a talk abstract and go, because scientific programming is increasingly common in any scientist's work and SciPy massively improves how you do that.&lt;/p&gt;
&lt;p&gt;I have also been guiltily ommitting that the speaker and attendee diversity at SciPy is shockingly bad. Last year, for example, 15% of attendees were women, and that was an improvement over the ratio three years ago, when just 3% (!!!) were women.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;I rationalised continuing to promote this conference because there was &lt;a href="https://www.youtube.com/watch?v=e0Z9-EuZJac"&gt;talk&lt;/a&gt; from past organisers about making efforts to improve. (And indeed, the past three years have been on an upward trajectory.)&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A couple of days ago, however, the full list of keynote speakers was announced, and lo and behold, it's three white guys. I have to acknowledge that they are extremely accomplished in the SciPy universe, and, if diversity were not more generally a problem at this conference and in tech in general, I wouldn't bat an eye. Excellent choice of speakers, really. Looking forward to it.&lt;/p&gt;
&lt;p&gt;But diversity &lt;i&gt;is&lt;/i&gt; a problem. It's an enormous problem. I'm inclined to call it catastrophic.&lt;/p&gt;
&lt;p&gt;Let me try to quantify it. Men and women are equally capable scientific programmers. So out of a total pool of 100 potential SciPy attendees/contributors, 50 are women and 50 are men. Now, let's assume the male side of the community is working at near-optimum capacity, so, 50 of 50 those men are at SciPy. 15% of attendees being women means just 9 of the 50 potential female contributors are making it out to the conference (9/59 ≈ 15%). Or, slice it another way, a whopping (50 - 9) / 50 = 82% of women who could be contributing to SciPy are &lt;i&gt;missing&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;Now, think of where we would be if we took 82% of male science-Pythonistas and just erased their talks, their discussions, and their code contributions. The SciPy ecosystem would &lt;i&gt;suck&lt;/i&gt;. Yet that is exactly how many coders are missing from our community.&lt;/p&gt;
&lt;p&gt;Now, we can sit here and play &lt;a href="http://www.feministe.us/blog/archives/2012/09/24/why-arent-there-more-women-at-stem-conferences-this-time-its-statistical/female-conference-speaker-bingo/"&gt;female conference speaker bingo&lt;/a&gt; until the cows come home to roost, but that is missing the point: these are all only excuses for not doing enough. "Not my fault" is not good enough anymore. It is everyone's fault who does not make an active and prolonged effort to fix things.&lt;/p&gt;
&lt;p&gt;The keynote speakers are an excellent place to make a difference, because you can eliminate all sorts of confounders. I have a certain sympathy, for example, for the argument that one should pick the best abstracts/scholarship recipients, rather than focus on race or gender. (Though the process should be truly blind to remove pervasive bias, as &lt;a href="http://blogs.scientificamerican.com/unofficial-prognosis/2012/09/23/study-shows-gender-bias-in-science-is-real-heres-why-it-matters/"&gt;studies&lt;/a&gt; and the experience of &lt;a href="http://www.theguardian.com/women-in-leadership/2013/oct/14/blind-auditions-orchestras-gender-bias"&gt;orchestra auditions&lt;/a&gt; have repeatedly shown.) For keynotes though, organisers are free to pursue any agenda they like. For example, they can make education a theme, and get Lorena Barba and Greg Wilson in, as they did last year.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Until the gender ratio begins to even remotely approach 1:1, diversity as an agenda should be a priority for the organisers. This doesn't mean invite the same number of women and men to give keynotes. This means &lt;i&gt;keep inviting qualified women until you have at least one confirmed female keynote speaker, &lt;/i&gt;and preferably two. &lt;i&gt;Then, and only then,&lt;/i&gt; you can look into inviting men.&lt;/p&gt;
&lt;p&gt;Women have been &lt;a href="http://www.timeshighereducation.co.uk/news/women-underrepresented-at-academic-conferences/2005015.article"&gt;found&lt;/a&gt; to turn down conference invitations more often than men, irrespective of ability or accomplishment. I don't know why, but I suspect one reason is &lt;a href="http://sciencecareers.sciencemag.org/career_magazine/previous_issues/articles/2010_02_12/science.opms.r1000084"&gt;lack of role models&lt;/a&gt;, in the form of previous female speakers. That's why this keynote roster is so disappointing. There's tons of accomplished female Pythonistas out there, and there would be even more if we all made a concerted effort to improve things.&lt;/p&gt;
&lt;p&gt;I don't want to retread the same territory that Jonathan Eisen (&lt;a href="https://twitter.com/phylogenomics"&gt;@phylogenomics&lt;/a&gt;) has already covered in "&lt;a href="http://phylogenomics.blogspot.com.au/2015/03/calling-attention-to-meetings-with.html"&gt;Calling attention to meeting with skewed gender ratios, even when it hurts&lt;/a&gt;". In particular, see that article for links to many others with ideas to improve gender ratios. But this is my contribution in the &lt;i&gt;exact same series: &lt;/i&gt;I &lt;i&gt;love&lt;/i&gt; SciPy. See my &lt;a href="http://ilovesymposia.com/2014/07/17/scipy-2014-recap/"&gt;previous&lt;/a&gt; &lt;a href="http://ilovesymposia.com/2015/03/23/go-to-scipy-2015/"&gt;posts&lt;/a&gt; for illustration.&lt;/p&gt;
&lt;p&gt;Even looking back at my recent post, when I looked for a picture that I thought captured the collegial, collaborative feel of the conference, I unintentionally picked one featuring only men. This needs to improve, massively, if I'm going to keep supporting this conference. I really hope the organisers place diversity at the centre of their agenda for every decision going forward.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;I thank &lt;a href="https://twitter.com/phylogenomics"&gt;Jonathan Eisen&lt;/a&gt;, &lt;a href="https://twitter.com/aterrel"&gt;Andy Ray Terrel&lt;/a&gt;, and &lt;a href="https://twitter.com/wrightingapril"&gt;April Wright&lt;/a&gt; for comments on earlier versions of this article.&lt;/i&gt;&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>diversity</category><category>Planet SciPy</category><category>programming</category><category>SciPy</category><guid>https://ilovesymposia.com/2015/04/03/calling-out-scipy-on-diversity/</guid><pubDate>Fri, 03 Apr 2015 08:46:53 GMT</pubDate></item><item><title>Go to SciPy 2015</title><link>https://ilovesymposia.com/2015/03/23/go-to-scipy-2015/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;a href="http://scipy2015.scipy.org"&gt;SciPy&lt;/a&gt; is my favourite conference. My goal with this post is to convince someone to go who hasn't had that chance yet.
&lt;p&gt;&lt;a href="https://ilovesymposia.com/2015/03/reception.jpg"&gt;&lt;img src="https://ilovesymposia.files.wordpress.com/2015/03/reception.jpg?w=450" alt="Photo by Ian Rees (from the SciPy 2012 conference website)" width="450" height="300" class="aligncenter size-medium wp-image-656"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Why SciPy?&lt;/h3&gt;

&lt;p&gt;Most scientists go to conferences in their own field: neuroscientists go to the monstrous Society for Neuroscience (SfN); Bioinformaticians go to RECOMB, ISMB, or PSB; and so on.&lt;/p&gt;
&lt;p&gt;People go to these to keep up with the latest advances in their field, and often, to do a bit of networking.&lt;/p&gt;
&lt;p&gt;SciPy is a different kind of conference. &lt;em&gt;It changes the way you do science.&lt;/em&gt; You learn about the latest free and open source software to help you with your work. You learn to write functions and interfaces instead of scripts, and to write tests so you don't break your code. You also learn to contribute these to bigger projects, maximising the reach and impact of your work (see "sprints", below).&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;And you learn these things by &lt;em&gt;doing&lt;/em&gt; them, with the people who are the best at this, rather than by reading books and blog posts. (Which maybe I shouldn't knock, since I'm writing a book about all this and you are reading my blog!)&lt;/p&gt;
&lt;p&gt;Attendees to SciPy have scientific software in common, but come from diverse fields, including physics, pure maths, data visualisation, geosciences, climatology, and yes, biology and bioinformatics. Mingling with such a diverse group is a fantastic way to get your creative juices flowing!&lt;/p&gt;
&lt;p&gt;The conference lasts a full week and is broken up into three parts: tutorials, main conference, and sprints.&lt;/p&gt;
&lt;h4&gt;the tutorials&lt;/h4&gt;

&lt;p&gt;With a few exceptions, you won't learn about your own field. But you will learn an enormous amount about &lt;strong&gt;tools&lt;/strong&gt; that will help you be a better scientist. If you are a newbie to Python, you can go to the beginner tutorials track and learn about the fantastic scientific libraries available in Python. If you already use NumPy, SciPy, pandas, and the IPython notebook, you can go to the intermediate or advanced tracks, and learn new things about those. Even as an advanced SciPy user I still get tons of value from the tutorials. (Last year Min RK &lt;a href="https://www.youtube.com/watch?v=U5mhpKkIx2Y"&gt;gave a &lt;em&gt;wild&lt;/em&gt; demo&lt;/a&gt; of IPython parallel's capabilities by crawling wikipedia remotely while building up a graph visualisation on his live notebook.) (Fast-forward to the 1h mark to see just the payoff.) Here's &lt;a href="https://conference.scipy.org/scipy2014/schedule/tutorials/"&gt;last year's tutorial schedule&lt;/a&gt; for an idea of what to expect.&lt;/p&gt;
&lt;h4&gt;the main conference track&lt;/h4&gt;

&lt;p&gt;You will also hear about the latest advances in the scientific libraries you know and use, and about libraries you didn't know about but will find useful (such as &lt;a href="http://scikit-bio.org"&gt;scikit-bio&lt;/a&gt;, &lt;a href="http://yt-project.org"&gt;yt&lt;/a&gt; or &lt;a href="http://cmrivers.github.io/epipy/"&gt;epipy&lt;/a&gt;). The main conference track features software advances written by presenters from many different fields. Hearing about these from the authors of the software lets you ask much different questions compared to hearing someone say, for example, "we used the Matlab image processing toolbox". If you ever had a feature request for your favourite library, or you wondered why they do something in a particular way, there's no better opportunity to get some closure.&lt;/p&gt;
&lt;p&gt;The crosstalk between different fields is phenomenal. Hearing how a diverse set of people deal with their software problems really opens your mind to completely different approaches to what you had previously considered.&lt;/p&gt;
&lt;h4&gt;the sprints&lt;/h4&gt;

&lt;p&gt;Finally, there's two days of coding sprints. Even if you are a complete beginner in software development, &lt;strong&gt;do yourself a favour and participate in one of these&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Two and a half years after my first SciPy in 2012, I'm writing a scientific Python book for O'Reilly, and I can 100% trace it to participating in the scikit-image sprint that year. With their guidance, I wrote my &lt;a href="https://github.com/scikit-image/scikit-image/pull/223"&gt;first ever GitHub pull request&lt;/a&gt; and my first ever &lt;a href="https://github.com/scikit-image/scikit-image/pull/223/files#diff-5d978a91c58ecc6a8275ccd24a6ddd3dR65"&gt;unit test&lt;/a&gt;. Both were tiny and cute, and I would consider them trivial now, but that seed grew into massive improvements in my code-writing practice and many more contributions to open source projects.&lt;/p&gt;
&lt;p&gt;And this is huge: now, instead of giving up when a software package doesn't do what I need it to do, I just look at the source code and figure out how I can add what I want. Someone else probably wants that functionality, and by putting it into a major software library instead of in my own code, I get it into the hands of many more users. It's a bit counterintuitive but there is nothing more gratifying than having some random person you've never met &lt;a href="https://github.com/scikit-image/scikit-image/issues/679"&gt;complain when you break something&lt;/a&gt;! This never happens when all your code is in your one little specialised repository containing functionality for your one paper.&lt;/p&gt;
&lt;h3&gt;How SciPy&lt;/h3&gt;

&lt;p&gt;The SciPy calls for tutorials, talks, posters, and its plotting contest are all out. There's specialised tracks and most of you reading this are probably interested in the &lt;a href="http://microbe.net/2015/03/17/scipy-2015-computational-life-and-medical-sciences-mini-symposium-call-for-abstracts/"&gt;computational biology and medicine track&lt;/a&gt;. It's taken me a while to write this post, so there's just one week left to submit something: the deadline is &lt;strike&gt;April 1st&lt;/strike&gt; &lt;strong&gt;Update:&lt;/strong&gt; the deadline for talks and posters has been extended to April 10th!&lt;/p&gt;
&lt;p&gt;Even if you don't get something in, I encourage you to participate. Everything I said above still applies if you're not presenting. You might have a bit more trouble convincing your funders to pay for your travels, but if that's the case I encourage you to apply for &lt;a href="http://scipy2015.scipy.org/ehome/115969/259279"&gt;financial assistance&lt;/a&gt; from the conference.&lt;/p&gt;
&lt;p&gt;I've &lt;a href="http://ilovesymposia.com/2014/07/17/scipy-2014-recap/"&gt;written about&lt;/a&gt; SciPy's diversity problem before, so I'm happy to report that this year there's specific &lt;a href="http://scipy2015.scipy.org/ehome/115969/259279"&gt;scholarships&lt;/a&gt; for women and minorities. (This may have been true last year, I forget.) &lt;em&gt;And&lt;/em&gt;, awesomely, Matt Davis has &lt;a href="http://penandpants.com/2015/03/12/scipy-2015-talk-help/"&gt;offered to help&lt;/a&gt; first-time submitters with writing their proposals.&lt;/p&gt;
&lt;p&gt;Give SciPy a try: &lt;a href="http://www.scipy2015.scipy.org/eselectv2/frontend/index/115969"&gt;submit here&lt;/a&gt; and/or &lt;a href="https://www.etouches.com/ehome/115969/259272/"&gt;register here&lt;/a&gt;. And feel free to &lt;a href="mailto:juan.n@unimelb.edu.au"&gt;email me&lt;/a&gt; or comment below if you have questions!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; A colleague pointed out that I should also mention the awesomeness of the conference venue, so here goes: Austin in July is awesome. If you love the heat like I do, well, it doesn't get any better. If you don't, don't worry: the &lt;a href="http://www.meetattexas.com"&gt;AT&amp;amp;T Conference Center&lt;/a&gt; AC is on friggin overdrive the whole time. Plus, there's some nearby &lt;a href="http://en.wikipedia.org/wiki/Barton_Springs_Pool"&gt;cold springs&lt;/a&gt; to swim in. The center itself is an excellent hotel and the conference organises massive discounts for attendees. There's a couple of great restaurants on-site; and the Mexican and Texas BBQ in the area are incredible — follow some Enthought and Continuum folks around to experience amazing food. Finally, Austin is a great city to bike in: last time I rented a road bike for the whole week from &lt;a href="http://mellowjohnnys.com"&gt;Mellow Johnny's&lt;/a&gt;, and enjoyed quite a few lunchtime and evening rides.&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>Planet SciPy</category><category>programming</category><category>Python</category><category>Scientific Computing</category><guid>https://ilovesymposia.com/2015/03/23/go-to-scipy-2015/</guid><pubDate>Mon, 23 Mar 2015 10:54:33 GMT</pubDate></item><item><title>SciPy 2014: an extremely useful conference with a diversity problem</title><link>https://ilovesymposia.com/2014/07/17/scipy-2014-recap/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;I just got back home from the &lt;a href="https://conference.scipy.org/scipy2014/"&gt;SciPy 2014&lt;/a&gt; conference in Austin, TX. Here are my thoughts after this year's conference.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;About SciPy in general&lt;/h3&gt;
&lt;p&gt;Since my first SciPy in 2012, I've decided to prioritise programming conferences over scientific ones, because the value I get for my time is just that much higher. At a scientific conference, I certainly become aware of way-cool stuff going on in other research labs in my area. Once I get home, however, I go back to whatever I was doing. In contrast, at programming conferences, I become aware of new tools and practices that &lt;em&gt;change the way I do science.&lt;/em&gt; In his &lt;a href="https://www.youtube.com/watch?v=1e26rp6qPbA"&gt;keynote&lt;/a&gt; this year, Greg Wilson said of Software Carpentry, "We save researchers a day a week for the rest of their careers." I feel the same way about SciPy in general.&lt;/p&gt;
&lt;p&gt;In the 2012 sprints, I learned about &lt;a href="https://help.github.com/articles/using-pull-requests"&gt;GitHub Pull Requests&lt;/a&gt; and code review, the lingua franca of open source development today. I can't express how useful that's been. I also started my ongoing collaboration with the &lt;a href="http://scikit-image.org/"&gt;scikit-image&lt;/a&gt; project, which has enabled my research to reach far more users than I ever could have achieved on my own.&lt;/p&gt;
&lt;p&gt;No scientific conference I've been to has had such an impact on my science output, nor can I imagine one doing so.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h3&gt;This year's highlights&lt;/h3&gt;

&lt;p&gt;This year was no different. Without further ado, here are my top hits from this year's conference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Michael Droettboom &lt;a href="https://www.youtube.com/watch?v=OsxJ5O6h8s0"&gt;talked&lt;/a&gt; about his continuous benchmarking project, &lt;a href="https://spacetelescope.github.io/asv/"&gt;Airspeed Velocity&lt;/a&gt;. It is hilariously named and incredibly useful. &lt;code&gt;asv&lt;/code&gt; checks out code from your Git repo at regular intervals and runs benchmarks (which you define), and plots your code's performance over time. It's an incredible guard against feature creep slowing down your code base.&lt;/li&gt;
&lt;li&gt;IPython recently unveiled their modal version 2.0 interface, sending vimmers worldwide rejoicing. But a few key bindings are just &lt;em&gt;wrong&lt;/em&gt; from a vim perspective. Most egregiously, &lt;code&gt;i&lt;/code&gt;, which should enter edit mode, interrupts the kernel when pressed twice! That's just evil. Paul Ivanov goes all in with vim keybindings with his hilarious and life-changing &lt;a href="https://www.youtube.com/watch?v=p9gnhmX1sPo"&gt;IPython vimception&lt;/a&gt; talk. The title is more appropriate than I realised. Must-watch.&lt;/li&gt;
&lt;li&gt;Damián Avila &lt;a href="https://www.youtube.com/watch?v=sZBKruEh0jI"&gt;revealed&lt;/a&gt; (heh) his live IPython presentations with Reveal.js, forever changing how Python programmers present their work. I was actually aware of this before the conference and used it in &lt;a href="https://www.youtube.com/watch?v=fn8F_NerTug"&gt;my own talk&lt;/a&gt;, but you should definitely watch his talk and get the extension from his &lt;a href="https://github.com/damianavila/live_reveal"&gt;repo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Min RK gave an excellent tutorial on IPython parallel (&lt;a href="https://github.com/minrk/IPython-parallel-tutorial"&gt;repo&lt;/a&gt;, videos &lt;a href="https://www.youtube.com/watch?v=y4hgalfhc1Y"&gt;1&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=-9ijnHPCYhY"&gt;2&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=U5mhpKkIx2Y"&gt;3&lt;/a&gt;). It's remarkable what the IPython team have achieved thanks to their decoupling of the interactive shell and the computation "kernel". (I still hate that word.)&lt;/li&gt;
&lt;li&gt;Brian Granger and Jon Frederic gave an excellent &lt;a href="https://www.youtube.com/watch?v=aIXED26Wppg"&gt;tutorial&lt;/a&gt; on IPython interactive widgets (notebook &lt;a href="https://github.com/ipython/ipython-in-depth"&gt;here&lt;/a&gt;). They provide a simple and fast way to interactively explore your data. I've already started using these on my own problems.&lt;/li&gt;
&lt;li&gt;Aaron Meurer gave the &lt;a href="https://www.youtube.com/watch?v=UaIvrDWrIWM"&gt;best introduction&lt;/a&gt; to the Python packaging problem that I've ever seen, and how Continuum's conda project solves it. I think we still need an in-depth tutorial on how package &lt;em&gt;distributors&lt;/em&gt; should use conda, but for users, conda is just awesome, and this talk explains why.&lt;/li&gt;
&lt;li&gt;Matt Rocklin has a gift for crystal clear speaking, despite his incredible speed, and it was on full display in his (and Mark Wiebe's) talk on &lt;a href="https://www.youtube.com/watch?v=9HPR-1PdZUk"&gt;Blaze&lt;/a&gt;, Continuum's new array abstraction library. I'm not sure I'll be using Blaze immediately but it's certainly on my radar now!&lt;/li&gt;
&lt;li&gt;Lightning talks are always fun: days &lt;a href="https://www.youtube.com/watch?v=JDrhn0-r9Eg"&gt;1&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=SMyto7WHiNs"&gt;2&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=ln4nE_EVDCg"&gt;3&lt;/a&gt;. Watch out for Fernando Pérez's announcement of Project Jupyter, the evolution of the IPython notebook, and for Damon McDougall's riveting history of waffles. (You think I'm joking.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apologies if I've missed anyone: with three tracks, an added one with the World Cup matches ;) , and my own talk preparations, "overwhelming" does not begin to describe the conference! I will second Aaron Meurer's &lt;a href="https://asmeurer.github.io/blog/posts/scipy-2014/"&gt;assertion&lt;/a&gt; that there were no bad talks. Which brings us to...&lt;/p&gt;
&lt;h3&gt;On my to-watch&lt;/h3&gt;

&lt;p&gt;Jake Vanderplas recently wrote a series of blog posts (last one &lt;a href="http://jakevdp.github.io/blog/2014/06/14/frequentism-and-bayesianism-4-bayesian-in-python/"&gt;here&lt;/a&gt;, with links to earlier posts) comparing frequentist and Bayesian approaches to statistical analysis, in which he makes a compelling argument that we should all relegate frequentism to the dustbin of history. As such, I intend to go over Chris Fonnesbeck's &lt;a href="https://www.youtube.com/watch?v=vOBB_ycQ0RA"&gt;tutorial&lt;/a&gt; (&lt;a href="https://www.youtube.com/watch?v=gFYPCdWB2-w"&gt;2&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=54sFjp7AvXM"&gt;3&lt;/a&gt;) and &lt;a href="https://www.youtube.com/watch?v=XbxIo7ScVzc"&gt;talk&lt;/a&gt; about Bayesian analysis in Python using PyMC.&lt;/p&gt;
&lt;p&gt;David Sanders also did a Julia &lt;a href="https://www.youtube.com/watch?v=vWkgEddb4-A"&gt;tutorial&lt;/a&gt; (&lt;a href="https://www.youtube.com/watch?v=I3JH5Bg46yU"&gt;part 2&lt;/a&gt;) that was scheduled at the same time as my own scikit-image tutorial, but I'm interested to see how the Julia ecosystem is progressing, so that should be a good place to start. (Although I'm still bitter that they went with 1-based indexing!)&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.youtube.com/watch?v=EzX7MN_bzqg"&gt;reproducible science tutorial&lt;/a&gt; (&lt;a href="https://www.youtube.com/watch?v=HCyHn_by3N0"&gt;part 2&lt;/a&gt;) generated quite a bit of buzz so I would be interested to go over that one as well.&lt;/p&gt;
&lt;p&gt;For those interested in computing education or in geoscience, the conference had dedicated tracks for each of those, so you are bound to find something you like (not least, Lorena Barba's and Greg Wilson's keynotes). Have a look at the full listing of videos &lt;a href="https://www.youtube.com/playlist?list=PLYx7XA2nY5GfuhCvStxgbynFNrxr3VFog"&gt;here&lt;/a&gt;. These might be easier to navigate by looking at the &lt;a href="https://conference.scipy.org/scipy2014/schedule/"&gt;conference schedule&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;The SciPy experience&lt;/h3&gt;

&lt;p&gt;I want to close this post with a few reflections on the conference itself.&lt;/p&gt;
&lt;p&gt;SciPy is broken up into three "stages": two days of tutorials, three days of talks, and two days of sprints. Above, I covered the tutorials and talks, but to me, the sprints are what truly distinguish SciPy. The &lt;a href="https://twitter.com/ellisonbg/status/487731404675899392"&gt;spirit of collaboration&lt;/a&gt; is unparalleled, and an astonishing amount of value is generated in those two days, either in the shape of code, or in introducing newcomers to new projects and new ways to collaborate in programming.&lt;/p&gt;
&lt;p&gt;My biggest regret of the conference was not giving a lightning talk urging people to come to the sprints. I repeatedly asked people whether they were coming to the sprints, and almost invariably the answer was that they didn't feel they were good enough to contribute. To reiterate my previous statements: (1) when I attended my first sprint in 2012, &lt;em&gt;I had never done a pull request&lt;/em&gt;; (2) sprints are an excellent way to introduce newcomers to projects and to the pull request development model. All the buzz around the sprints was how welcoming all of the teams were, but I think there is a massive number of missed opportunities because this is not made obvious to attendees &lt;em&gt;before&lt;/em&gt; the sprints.&lt;/p&gt;
&lt;p&gt;Lastly, a few notes on diversity. During the conference, April Wright, a student in evolutionary biology at UT Austin, wrote a heartbreaking &lt;a href="https://wrightaprilm.github.io/posts/lonely.html"&gt;blog post&lt;/a&gt; about how excluded she felt from a conference where only 15% of attendees were women. That particular incident was joyfully resolved, with plenty of SciPyers reaching out to April and inviting her along to sprints and other events. But it highlighted just how poorly we are doing in terms of diversity. Andy Terrel, one of the conference organisers, &lt;a href="https://twitter.com/aterrel/status/487281782530650112"&gt;pointed out&lt;/a&gt; that 15% is much better than 2012's three (women, not percent!), but (a) that is still extremely low, and (b) I was horrified to read this because I was there in 2012... &lt;em&gt;And I did not notice that anything was wrong.&lt;/em&gt; How can it be, in 2012, that it can seem &lt;em&gt;normal&lt;/em&gt; to be at a professional conference and have effectively zero women around? It doesn't matter what one says about the background percentage of women in our industry and so on... Maybe SciPy is doing all it can about diversity. (Though I doubt it.) The point is that a scene like that should &lt;em&gt;feel&lt;/em&gt; like one of those deserted cityscapes in post-apocalyptic movies. As long as it doesn't, as long as SciPy feels normal, we will continue to have diversity problems. I hope my fellow SciPyers look at these numbers, feel appalled as I have, and try to improve.&lt;/p&gt;
&lt;p&gt;... And on cue, while I was writing this post, Andy Terrel wrote a great post of his own about this very topic:
http://andy.terrel.us/blog/2014/07/17/&lt;/p&gt;
&lt;p&gt;I still consider SciPy a fantastic conference. Jonathan Eisen (&lt;a href="https://twitter.com/phylogenomics"&gt;@phylogenomics&lt;/a&gt;), whom I admire, would undoubtedly boycott it because of the problems outlined above, but I am heartened that the organising committee is taking this as a serious problem and trying hard fix it. I hope next time it is even better.&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>diversity</category><category>Planet SciPy</category><category>programming</category><category>women in science</category><guid>https://ilovesymposia.com/2014/07/17/scipy-2014-recap/</guid><pubDate>Thu, 17 Jul 2014 08:48:56 GMT</pubDate></item></channel></rss>