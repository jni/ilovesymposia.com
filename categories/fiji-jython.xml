<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>I Love Symposia! (Posts about Fiji Jython)</title><link>https://ilovesymposia.com/</link><description></description><atom:link href="https://ilovesymposia.com/categories/fiji-jython.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:jni.soma@fastmail.com"&gt;Juan Nunez-Iglesias&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License BY"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Thu, 24 Oct 2019 00:09:12 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>An update on mixing Java and Python with Fiji</title><link>https://ilovesymposia.com/2014/03/15/an-update-on-mixing-java-and-python-with-fiji/</link><dc:creator>Juan Nunez-Iglesias</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Two weeks ago I &lt;a href="http://ilovesymposia.com/2014/02/26/fiji-jython/"&gt;posted&lt;/a&gt; about invoking ImageJ functions from Python using Fiji’s Jython interpreter. A couple of updates on the topic: &lt;/p&gt;
&lt;p&gt;First, I’ve made a &lt;a href="https://github.com/jni/fiji-python"&gt;repository&lt;/a&gt; with a template project encapsulating my tips from that post. It’s very simple to get a Fiji Jython script working from that template. As an example, &lt;a href="https://github.com/jni/snemi-eval"&gt;here’s&lt;/a&gt; a script to evaluate segmentations using the metric used by the &lt;a href="https://ilovesymposia.com/2014/03/15/an-update-on-mixing-java-and-python-with-fiji/brainiac2.mit.edu/SNEMI3D/"&gt;SNEMI3D segmentation challenge&lt;/a&gt; (a slightly modified version of the adapted Rand error). &lt;/p&gt;

&lt;p&gt;Second, this entire discussion might be rendered obsolete by two incredible projects from the &lt;a href="http://www.cellprofiler.org/"&gt;CellProfiler&lt;/a&gt; team: &lt;a href="https://github.com/CellProfiler/python-javabridge"&gt;Python-Javabridge&lt;/a&gt;, which allows Python to interact seamlessly with Java code, and &lt;a href="https://github.com/CellProfiler/python-bioformats"&gt;Python-Bioformats&lt;/a&gt;, which uses Python-Javabridge to read Bioformats images into Python. I have yet to play with them, but both look like cleaner alternatives to interact with ImageJ than my Jython scripting! At some point I’ll write a post exploring these tools, but if you get to it before me, please mention it in the comments!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Fiji</category><category>Fiji Jython</category><category>Jython</category><category>Planet SciPy</category><category>programming</category><category>Python</category><category>Python-Bioformats</category><category>Python-Javabridge</category><category>software</category><guid>https://ilovesymposia.com/2014/03/15/an-update-on-mixing-java-and-python-with-fiji/</guid><pubDate>Fri, 14 Mar 2014 15:21:06 GMT</pubDate></item></channel></rss>